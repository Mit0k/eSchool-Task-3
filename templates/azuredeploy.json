{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "functions": [
    {
      "namespace": "helpers",
      "members": {
        "uniqueName": {
          "parameters": [
            {
              "name": "resourceName",
              "type": "string"
            },
            {
              "name": "prefix",
              "type": "string"
            },
            {
              "name": "location",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[toLower(concat(parameters('resourceName'),'-',parameters('prefix'),'-',parameters('location')))]"
          }
        },
        "getIPfromSubnet": {
          "parameters": [
            {
              "name": "addressPrefix",
              "type": "string"
            },
            {
              "name": "ip",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[format('{0}.{1}.{2}.{3}',split(parameters('addressPrefix'),'.')[0],split(parameters('addressPrefix'),'.')[1],split(parameters('addressPrefix'),'.')[2],parameters('ip'))]"
          }
        }
      }
    }
  ],
  "parameters": {
    "prefix": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "databaseUsername": {
      "type": "string",
      "defaultValue": "mysqladmin"
    },
    "databasePassword": {
      "type": "securestring"
    },
    "cpuThreshold": {
      "type": "int",
      "metadata": {
        "description": "description"
      },
      "defaultValue": 75
    },
    "slackURL": {
      "type": "securestring"
    },
    "alertScript": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    },
    "vnetAddressPrefixes": {
      "type": "string",
      "defaultValue": "10.2.0.0/16"
    },
    "snetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.2.0.0/24"
    },
    "snetDBAddressPrefix": {
      "type": "string",
      "defaultValue": "10.2.1.0/24"
    }
  },
  "variables": {
    "vnetLink": "[concat(variables('privateDnsName'), '/',uniqueString(parameters('prefix')))]",
    "planName": "[helpers.uniqueName('plan',parameters('prefix'),parameters('location'))]",
    "planSKU": {
      "name": "S1",
      "tier": "Standard",
      "size": "S1",
      "family": "S",
      "capacity": 1
    },
    "webAppName": "[helpers.uniqueName('app',parameters('prefix'),parameters('location'))]",
    "projectDatabaseName": "eschool",
    "dbServerName": "[helpers.uniqueName('db',parameters('prefix'),parameters('location'))]",
    "dbSKU": {
      "name": "Standard_B1ms"
    },
    "dbProperties": {
      "administratorLogin": "[parameters('databaseUsername')]",
      "administratorLoginPassword": "[parameters('databasePassword')]",
      "storage": {
        "storageSizeGB": 20,
        "iops": 360,
        "autoGrow": "Enabled"
      },
      "network": {
        "delegatedSubnetResourceId": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vnetName')), '/subnets/',variables('snetDBName'))]",
        "privateDnsZoneResourceId": "[resourceId('Microsoft.Network/privateDnsZones',variables('privateDnsName'))]"
      },
      "version": "5.7",
      "infrastructureEncryption": "Disabled",
      "publicNetworkAccess": "Disabled"
    },
    "vnetName": "[helpers.uniqueName('vnet',parameters('prefix'),parameters('location'))]",
    "autoscalesettingsName": "autoscalesettings_webapp",
    "alertAppName": "[helpers.uniqueName('func',parameters('prefix'),parameters('location'))]",
    "alertAppPlanName": "[helpers.uniqueName('plan-func',parameters('prefix'),parameters('location'))]",
    "alertFunctionName": "SlackTrigger",
    "metricAlertsName": "[helpers.uniqueName('metric_alert',parameters('prefix'),parameters('location'))]",
    "actionGroupsName": "[concat('ag-',parameters('location'))]",
    "snetName": "[concat('snet-',parameters('prefix'))]",
    "snetDBName": "[concat('snet-db-',parameters('prefix'))]",
    "privateDnsName": "fdb.private.mysql.database.azure.com",
    "privateDnsARecordIP": "[helpers.getIPfromSubnet(parameters('snetDBAddressPrefix'),'4')]",
    "increaseThreshold": 50,
    "decreaseThreshold": 40,
    "storageAccountName": "[toLower(format('st{0}',uniqueString(parameters('prefix'))))]",
    "storageSku": "Standard_LRS",
    "appInsightsName": "AppInsights",
    "alertAppHostKey": "[format('{0}/host/default', resourceId('Microsoft.Web/sites', variables('alertAppName')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ],
      "name": "[variables('privateDnsName')]",
      "location": "global"
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[variables('vnetLink')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/A",
      "apiVersion": "2020-06-01",
      "name": "[concat(variables('privateDnsName'), '/',variables('dbServerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsName'))]"
      ],
      "properties": {
        "ttl": 30,
        "aRecords": [
          {
            "ipv4Address": "[variables('privateDnsARecordIP')]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DBforMySQL/flexibleServers",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones',variables('privateDnsName'))]"
      ],
      "apiVersion": "2021-05-01",
      "name": "[variables('dbServerName')]",
      "location": "[parameters('location')]",
      "sku": "[variables('dbSKU')]",
      "properties": "[variables('dbProperties')]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["[parameters('vnetAddressPrefixes')]"]
        },
        "subnets": [
          {
            "name": "[variables('snetName')]",
            "properties": {
              "addressPrefix": "[parameters('snetAddressPrefix')]",
              "delegations": [
                {
                  "name": "delegation",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverfarms"
                  }
                }
              ],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[variables('snetDBName')]",
            "properties": {
              "addressPrefix": "[parameters('snetDBAddressPrefix')]",
              "delegations": [
                {
                  "name": "dlg-Microsoft.DBforMySQL-flexibleServers",
                  "properties": {
                    "serviceName": "Microsoft.DBforMySQL/flexibleServers"
                  }
                }
              ],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('planName')]",
      "location": "[parameters('location')]",
      "sku": "[variables('planSKU')]",
      "kind": "linux",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('webAppName'), '/web')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "linuxFxVersion": "JAVA|8-jre8",
        "alwaysOn": true,
        "appCommandLine": "java -jar /home/site/wwwroot/eschool.jar",
        "managedPipelineMode": "Integrated",
        "loadBalancing": "LeastRequests",
        "vnetName": "[variables('vnetName')]",
        "vnetRouteAllEnabled": true,
        "appSettings": [
          {
            "name": "DATASOURCE_URL",
            "value": "[format('jdbc:mysql://{0}.mysql.database.azure.com:3306/{1}?useUnicode=true&characterEncoding=utf8&createDatabaseIfNotExist=true&autoReconnect=true&useSSL=true&enabledTLSProtocols=TLSv1.2',variables('dbServerName'),variables('projectDatabaseName'))]"
          },
          {
            "name": "DATASOURCE_USERNAME",
            "value": "[format('{0}',parameters('databaseUsername'))]"
          },
          {
            "name": "DATASOURCE_PASSWORD",
            "value": "[parameters('databasePassword')]"
          },
          {
            "name": "ESCHOOL_APP_HOST",
            "value": "[format('{0}.azurewebsites.net',variables('webAppName'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ],
      "kind": "app,linux",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "reserved": true,
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "JAVA|8-jre8",
          "alwaysOn": true
        },
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('snetName'))]"
      }
    },
    {
      "type": "Microsoft.insights/autoscalesettings",
      "apiVersion": "2021-05-01-preview",
      "name": "[variables('autoscalesettingsName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]"
      ],
      "properties": {
        "profiles": [
          {
            "name": "Autoscale properties",
            "capacity": {
              "minimum": "1",
              "maximum": "2",
              "default": "1"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "Requests",
                  "metricNamespace": "Microsoft.web/sites",
                  "metricResourceUri": "[resourceId('Microsoft.Web/sites',  variables('webAppName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Total",
                  "operator": "GreaterThan",
                  "threshold": "[variables('increaseThreshold')]"
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "Requests",
                  "metricNamespace": "Microsoft.web/sites",
                  "metricResourceUri": "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Total",
                  "operator": "LessThan",
                  "threshold": "[variables('decreaseThreshold')]"
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              }
            ]
          }
        ],
        "enabled": true,
        "name": "[variables('autoscalesettingsName')]",
        "targetResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]"
      }
    },
    {
      "type": "Microsoft.Web/sites/virtualNetworkConnections",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('webAppName'), '/',variables('vnetName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ],
      "properties": {
        "vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('snetName'))]",
        "isSwift": true
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageSku')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('alertAppPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('alertAppPlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "name": "[variables('alertAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('alertAppPlanName'))]",
        "siteConfig": {
          "numberOfWorkers": 1,
          "httpsOnly": true,
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('alertAppName'))]"
            },
            {
              "name": "SLACK_URL",
              "value": "[parameters('slackURL')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', variables('alertAppName'), variables('alertFunctionName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('alertAppName'))]"
      ],
      "properties": {
        "config": {
          "disabled": false,
          "bindings": [
            {
              "name": "req",
              "type": "httpTrigger",
              "direction": "in",
              "authLevel": "function",
              "methods": ["get", "post"]
            },
            {
              "name": "$return",
              "type": "http",
              "direction": "out"
            }
          ]
        },
        "files": {
          "run.csx": "[parameters('alertScript')]"
        }
      }
    },
    {
      "type": "Microsoft.insights/actionGroups",
      "apiVersion": "2021-09-01",
      "name": "[variables('actionGroupsName')]",
      "location": "Global",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('alertAppName'))]"
      ],
      "properties": {
        "groupShortName": "[variables('actionGroupsName')]",
        "enabled": true,
        "azureFunctionReceivers": [
          {
            "name": "CpuAlert",
            "functionAppResourceId": "[resourceId('Microsoft.Web/sites', variables('alertAppName'))]",
            "httpTriggerUrl": "[uri(format('https://{0}.azurewebsites.net',variables('alertAppName')),format('/api/{0}?code={1}',variables('alertFunctionName'),listKeys(variables('alertAppHostKey'), '2020-12-01').functionKeys.default))]",
            "functionName": "[variables('alertFunctionName')]",
            "useCommonAlertSchema": false
          }
        ]
      }
    },
    {
      "type": "Microsoft.insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[variables('metricAlertsName')]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "[resourceId('Microsoft.insights/actionGroups', variables('actionGroupsName'))]"
      ],
      "properties": {
        "description": "A",
        "severity": 0,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT1M",
        "criteria": {
          "allOf": [
            {
              "threshold": "[parameters('cpuThreshold')]",
              "name": "Metric1",
              "metricNamespace": "Microsoft.Web/serverFarms",
              "metricName": "CpuPercentage",
              "operator": "GreaterThan",
              "timeAggregation": "Average",
              "criterionType": "StaticThresholdCriterion"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
        },
        "autoMitigate": true,
        "targetResourceType": "Microsoft.Web/serverFarms",
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.insights/actionGroups', variables('actionGroupsName'))]"
          }
        ]
      }
    }
  ],
  "outputs": {
    "webappName": {
      "type": "string",
      "value": "[variables('webAppName')]"
    },
    "serverName": {
      "type": "string",
      "value": "[variables('dbServerName')]"
    },
    "dbUsername": {
      "type": "string",
      "value": "[parameters('databaseUsername')]"
    }
  }
}
